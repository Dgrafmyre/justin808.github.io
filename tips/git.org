#+BEGIN_HTML
---
layout: page
title: Git Tips
sharing: true
footer: true
date: 2013-08-15 17:57
comments: true
categories: [git, Vim]
keywords: RubyMine, git, Tips, Productivity
published: false
description: My favorite git tips and shortcuts
---
#+END_HTML

* Links to useful information


* Personal favorite tips


* Creating a new feature branch

# create a new tracking branch
# git checkout -b feature/hl/sitemap
# git push -u origin feature/hl/sitemap


* Aliases
#+BEGIN_SRC bash
# Favorites used all the time
alias gst='git status'
alias gbv='git branch -vv'
alias gb='git branch'
alias gd='git diff'
alias gh='git log --name-status -n'
# avoid having useless console messages 
alias gitk='gitk 2>/dev/null'
alias gp='git push'
alias grb='git rebase -p'

alias gba='git branch -a'
alias gc='git commit -v'
alias gl='git pull'
alias s='git status --short'


# Aliases I don't use frequently
alias gm='git merge --no-ff'
alias gup='git fetch origin && grb origin/$(git_current_branch)'
alias gpthis='git push origin HEAD:$(git_current_branch)'
#+END_SRC




* Revert Last Unpushed commit

Undo a commit and redo

#+BEGIN_SRC bash
$ git commit ...              (1)
$ git reset --soft HEAD^      (2)
$ edit                        (3)
$ git add ....                (4)
$ git commit -c ORIG_HEAD     (5)
#+END_SRC
This is what you want to undo

This is most often done when you remembered what you just committed is incomplete, or you misspelled your commit message, or both. Leaves working tree as it was before "reset".

Make corrections to working tree files.

Stage changes for commit.

"reset" copies the old head to .git/ORIG_HEAD; redo the commit by starting with its log message. If you do not need to edit the message further, you can give -C option instead





* Commands

git log --pretty=format:'%h %s' --graph


# what's in feature and not merged into dev
git log dev..feature/remove-old-sitemap


# see what's in a stash
git stash show -p

git stash list | awk -F: ‘{ print “\n\n\n\n”; print $0; print “\n\n”; system(“git –no-pager stash show -p ” $1); }’ | less




* Stop git commit
Quit vim with :cq which quits with an error code.
